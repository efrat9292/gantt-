{"version":3,"sources":["Components/Gantt/gantt.js","Components/Header/header.js","Components/Gantt/DisplayGantt/displayGantt.js","Components/routing/routing.js","Components/Configurator/Configurator.js","App.js","reportWebVitals.js","index.js"],"names":["Gantt","props","dataProcessor","initZoom","gantt","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","value","setLevel","this","onDataUpdated","attachEvent","id","task","priority","config","xml_date","tasks","ganttContainer","initGanttDataProcessor","parse","templates","scale_cell_class","date","task_class","start","end","progress","class","gantt_grid_data","task_text","text","gantt_cell","grid_row_class","columnName","column","columns","tree","width","min_width","height","max_width","resize","align","template","cardName","tooltip_date_format","date_to_str","formatFunc","old_width","new_width","message","layout","css","rows","cols","view","scrollX","scrollY","destructor","alert","setZoom","ref","input","style","Component","withRouter","allProjects","workspaces","projects","console","log","arr","map","item","index","className","data-toggle","aria-haspopup","aria-expanded","project","backgroundColor","color","DisplayGantt","projectName","allWorkspace","allTheWorkspaces","theCards","theTasks","mone","cards","push","indexOf","currDate","minYear","maxYear","year","start_date","split","concat","parseInt","toString","data","links","source","target","type","currentZoom","action","addMessage","Routing","path","Configurator","onChange","e","color_chenge","document","documentElement","getPropertyValue","setProperty","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.828aa523.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport './gantt.css';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\nimport '../Gantt/gantt.css';\r\nexport default class Gantt extends Component {\r\n\r\n    constructor(props) {\r\n        debugger\r\n        super(props);\r\n        this.initZoom();\r\n\r\n    }\r\n\r\n\r\n\r\n    dataProcessor = null;\r\n\r\n    initZoom() {\r\n        gantt.ext.zoom.init({\r\n            levels: [\r\n\r\n                {\r\n                    name: 'Days',\r\n                    scale_height: 60,\r\n                    min_column_width: 40,\r\n\r\n                    scales: [\r\n\r\n                        { unit: \"month\", step: 1, format: \"%F %Y\" },\r\n                        { unit: \"day\", step: 1, format: \"%j\" }\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n\r\n    setZoom(value) {\r\n        gantt.ext.zoom.setLevel(value);\r\n    }\r\n\r\n    initGanttDataProcessor() {\r\n        const onDataUpdated = this.props.onDataUpdated;\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        const myVar = [1, 2, 3, 4, 5, 6];\r\n\r\n\r\n        gantt.attachEvent(\"onBeforeTaskDisplay\", function (id, task) {\r\n            if (task.priority == \"high\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\r\n        const { tasks } = this.props;\r\n        gantt.init(this.ganttContainer);\r\n        this.initGanttDataProcessor();\r\n        gantt.parse(tasks);\r\n\r\n        gantt.templates.scale_cell_class = function (date) {\r\n\r\n            return \"weekend\";\r\n        }\r\n        gantt.templates.task_class = function (start, end, task) {\r\n            if (task.progress > 0 && task.progress < 1) {\r\n                return task.class = \"pinkBorder\";\r\n            }\r\n            if (task.progress === 1) {\r\n                return task.class = \"greenBorder vv\";\r\n            }\r\n            else {\r\n                return task.class = \"orangeBorder\";\r\n            }\r\n        };\r\n        gantt.templates.gantt_grid_data = function (start, end) {\r\n            return \"vv\"\r\n\r\n        }\r\n        gantt.templates.task_text = function (start, end, task) {\r\n            if (task.progress > 1) {\r\n                return task.text;\r\n            }\r\n            else {\r\n                return task.text + \" \" + `<b>${(task.progress) * 100}%</b>`;\r\n            }\r\n        };\r\n        gantt.templates.gantt_cell = function (start, end, task) {\r\n            return task.text = \"knkl\";\r\n        }\r\n\r\n        gantt.templates.grid_row_class = function (columnName, column) {\r\n            return \"ll\"\r\n\r\n        };\r\n\r\n        // gantt.attachEvent(\"onBeforeTaskDisplay\", function(id, task){\r\n        //     if (task.priority == \"high\"){\r\n        //         return true;\r\n        //     }\r\n        //     return false;\r\n        // });\r\n\r\n\r\n        gantt.config.columns = [\r\n            {\r\n                name: \"cardName\", tree: true, width: 190, min_width: 150, height: 900, max_width: 300,\r\n                resize: true, align: \"center\", template: myFunc\r\n            },\r\n\r\n        ];\r\n        function myFunc(task) {\r\n            if (task.cardName)\r\n                return `<div class='important'><i  class=\"material-icons  \">\r\n                arrow_drop_down\r\n                </i>${task.cardName}</div>`;\r\n        };\r\n        /////////////////////////////////////////////////\r\n        gantt.templates.tooltip_date_format = function (date) {\r\n            var formatFunc = gantt.date.date_to_str(\"%Y-%m-%d\");\r\n            return formatFunc(date);\r\n        };\r\n\r\n        gantt.attachEvent(\"onGridResizeEnd\", function (old_width, new_width) {\r\n\r\n            gantt.message(\"Grid is now <b>\" + new_width + \"</b>px width\");\r\n            return true;\r\n        });\r\n\r\n\r\n\r\n        // gantt.config.columns = [\r\n        //     { name: \"text\", tree: true, width: \"*\", resize: true },//-> 'resize' active\r\n        //     { name: \"start_date\", resize: true, min_width: 100 },//-> 'resize' limited by 'min_width'\r\n        //     { name: \"duration\", align: \"center\" },              //-> no resize\r\n        //     { name: \"add\", width: \"44\" }\r\n        // ];\r\n\r\n        gantt.config.layout = {\r\n            css: \"gantt_container\",\r\n            rows: [\r\n                {\r\n                    cols: [\r\n                        { view: \"grid\", id: \"grid\", scrollX: \"scrollHor\", scrollY: \"scrollVer\" },\r\n                        { view: \"timeline\", id: \"timeline\", scrollX: \"scrollHor\", scrollY: \"scrollVer\" },\r\n                        { view: \"scrollbar\", id: \"scrollVer\" }\r\n\r\n                    ]\r\n                },\r\n                { view: \"scrollbar\", id: \"scrollHor\" }\r\n            ]\r\n        };\r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        if (this.dataProcessor) {\r\n            this.dataProcessor.destructor();\r\n            this.dataProcessor = null;\r\n        }\r\n    }\r\n    showAlert() {\r\n        alert(\"bjkbj\")\r\n    }\r\n\r\n\r\n    render() {\r\n        const { zoom } = this.props;\r\n        this.setZoom(zoom);\r\n\r\n        return (\r\n            <>\r\n                <center>\r\n                    <div ref={(input) => { this.ganttContainer = input }}\r\n                        style={{ width: '100%', height: '100%' }}>\r\n                    </div>\r\n                    {/* <span class=\"material-icons-outlined\">\r\n                        arrow_drop_down\r\n                    </span> */}\r\n                    {/* <img src={cardIcon}></img> */}\r\n                </center>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n","import { react, useEffect, useState } from 'react';\r\nimport './header.css'\r\nimport workspaces from '../Gantt/workspace.json'\r\n// import Gantt from '../Gantt/gantt'\r\n// import DisplayGantt from '../Gantt/displayGantt'\r\nimport { Route, Router, withRouter } from \"react-router-dom\";\r\nimport Switch from 'react-bootstrap/esm/Switch';\r\n// import useState from 'react-dom'\r\nfunction Header(props) {\r\n\r\n  // const [projectName, setProjectName] = useState(true);\r\n  const allWorkspace = { workspaces };\r\n  const allProjects = allWorkspace.workspaces.workspaces.projects;\r\n  // const routeToGantt = (projectName) => {\r\n  // props.history.push(`/Gantt/${projectName}`);\r\n  // }\r\n  const l = \"myName\";\r\n  // const colorCircle=allProjects.workspaces.workspaces.projects\r\n  console.log(allProjects);\r\n  const arr = []\r\n  allProjects.map((item, index) => {\r\n    arr[index] = item.name;\r\n  })\r\n  console.log(arr);\r\n\r\n  function goToGantt() {\r\n    // <Redirect to={'/Gantt'}></Redirect>\r\n    props.history.push('/Gantt/');\r\n    // history.push('/Gantt')\r\n    alert(\"camr\")\r\n  }\r\n\r\n  //const numbers = props.numbers;\r\n  // const listItemsProjectName = arr.map((number) =>\r\n  //   // <li>{number}</li>\r\n  //   <li>{number}</li>\r\n\r\n  // )\r\n\r\n\r\n\r\n\r\n  // function greetUser(e) {\r\n\r\n\r\n  // }\r\n\r\n  // const  handleClick = value => () => {\r\n\r\n\r\n  //    // history.push(`/Gantt/${value.name}`) ;\r\n  //     return \r\n  //     // <Redirect to='/Gantt/' />\r\n  //     <Redirect to={\"/Gantt/\" + value.name} />\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"container \">\r\n        <div className=\"row  header2\">\r\n\r\n        </div>\r\n        <div className=\"row header1\">\r\n          <div className=\"col-3\">\r\n            <div className=\"btn-group\">\r\n\r\n              <div className=\"dropBtn dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Projects\r\n                   </div>\r\n\r\n              <div className=\"   dropContainer dropdown-menu dropdown-menu-right container \">\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n\r\n                  </div>\r\n\r\n                  {allProjects.map((project) =>\r\n\r\n                    <div className=\" row mt-2\"\r\n\r\n                    >\r\n                      <div className=\"col-1  itemCircle ml-3\" style={{ backgroundColor: project.color ? project.color : \"blue\" }}>   {project.name[0]} </div>\r\n                      <div className=\"col-1 \">\r\n\r\n\r\n                        {/* <Router>\r\n                          <nav >\r\n                            <Switch>\r\n                              <Route path=\"/Gantt/:projectName\">\r\n                                <Gantt />\r\n                              </Route>\r\n                            </Switch> */}\r\n\r\n                        <button\r\n                          // onClick={() => routeToGantt(project.name)}\r\n                          className=\" dropdown-item dropItem \"\r\n\r\n                        >\r\n\r\n                          {/* <Link to={`/Gantt/${project.name}`}> */}\r\n                          {project.name}\r\n                          {/* </Link> */}\r\n                        </button>\r\n\r\n\r\n\r\n\r\n                        {/* </nav>\r\n                        </Router> */}\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n                  )\r\n\r\n\r\n                  }\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div> <div className=\"col-3\">\r\n\r\n          </div>\r\n          <div className=\"col-3 gantt\">\r\n            Gantt\r\n    </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </>\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\nexport default withRouter(Header)","import React, { Component } from 'react';\r\nimport Gantt from '../gantt';\r\nimport './displayGantt.css'\r\nimport workspaces from '../workspace.json'\r\nexport default function DisplayGantt() {\r\n\r\n    const projectName = \"project1\";\r\n    console.log(projectName);\r\n    const allWorkspace = { workspaces };\r\n    console.log(allWorkspace);\r\n    const allTheWorkspaces = allWorkspace.workspaces.workspaces.projects;\r\n\r\n\r\n    const theCards = []\r\n    const theTasks = []\r\n    const mone = []\r\n\r\n    allTheWorkspaces.map((item, index) => {\r\n        {\r\n            item.name === projectName ? item.cards.map((item, index) => {\r\n                {\r\n                    theCards.push(item);\r\n                    console.log(\"pppppppp\", item)\r\n\r\n                }\r\n\r\n            })\r\n                : console.log(\"bed\", item.cards);\r\n        }\r\n    })\r\n    console.log(\"the cards\", theCards);\r\n\r\n    {\r\n        theCards.map((item, index) => {\r\n\r\n            let indexOf = 0;\r\n\r\n            item.tasks.map((item) => {\r\n                indexOf++;\r\n\r\n\r\n                theTasks.push(item)\r\n\r\n\r\n            })\r\n\r\n            mone.push(indexOf)\r\n\r\n        })\r\n\r\n    }\r\n    console.log(\"mone\", mone);\r\n    let minYear = \"3000-01-01\";\r\n    let maxYear = \"1000-01-01\";\r\n    let currDate;\r\n\r\n\r\n\r\n    {\r\n        theTasks.map((item) => {\r\n            let year = item.start_date.split('-')[0];\r\n            if (year > maxYear.split('-')[0]) {\r\n\r\n                currDate = year\r\n                console.log(\"papapap\", year);\r\n                year = year.concat('-01-01')\r\n                console.log(\"tttt\", year);\r\n                maxYear = year;\r\n            } else if (year < minYear) {\r\n                minYear = year\r\n            }\r\n            else {\r\n                return\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n    }\r\n    currDate = parseInt(currDate)\r\n    currDate = currDate + 2\r\n    currDate = currDate.toString();\r\n\r\n    currDate = currDate.concat('-01-01')\r\n\r\n    maxYear = currDate;\r\n    console.log();\r\n    theTasks.push(\r\n\r\n        {\r\n            \"id\": 2985730,\r\n            \"text\": \"first\",\r\n            \"start_date\": currDate,\r\n            \"duration\": 3,\r\n            \"progress\": 0.6,\r\n        })\r\n\r\n\r\n    console.log(\"the tasks\", theTasks);\r\n\r\n    const state = {\r\n        currentZoom: 'Days',\r\n        messages: []\r\n    };\r\n    const data = {\r\n        data: theTasks,\r\n        links: [\r\n            { id: 1, source: 7, target: 7, type: '0' }\r\n        ]\r\n    };\r\n\r\n    const logDataUpdate = (type, action, item, id) => {\r\n        let text = item && item.text ? ` (${item.text})` : '';\r\n        let message = `${type} ${action}: ${id} ${text}`;\r\n        if (type === 'link' && action !== 'delete') {\r\n            message += ` ( source: ${item.source}, target: ${item.target} )`;\r\n        }\r\n        this.addMessage(message);\r\n    }\r\n\r\n    const handleZoomChange = (zoom) => {\r\n        this.setState({\r\n            currentZoom: zoom\r\n        });\r\n    }\r\n    const { currentZoom, messages } = state;\r\n    return (\r\n        <div>\r\n            <div style={{ width: \"40rem\" }}>\r\n                <Gantt\r\n                    tasks={data}\r\n                    zoom={currentZoom}\r\n                    onDataUpdated={logDataUpdate}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n","import { react, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter, useParams, Redirect, useHistory } from \"react-router-dom\";\r\nimport Header from '../Header/header';\r\n// import Gantt from '../Gantt/gantt';\r\nimport DisplayGantt from '../Gantt/DisplayGantt/displayGantt';\r\n// import { createBrowserHistory } from 'history';\r\n// export const history = createBrowserHistory({ forceRefresh: true });\r\n\r\nexport default function Routing() {\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Header></Header>\r\n                <Switch>\r\n                    <Route path='/DisplayGantt/:projectName'>\r\n                        <DisplayGantt />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </>  \r\n    );\r\n}","\r\nimport React from 'react'\r\nimport './Configurator.css'\r\n\r\nexport default function Configurator() {\r\n    function func1(color_chenge) {\r\n        const colorChenge1 = document.documentElement.style.getPropertyValue('--color1');\r\n        document.documentElement.style.setProperty('--color1', color_chenge)\r\n\r\n    }\r\n    function func2(color_chenge) {\r\n        const colorChenge2 = document.documentElement.style.getPropertyValue('--color2');\r\n        document.documentElement.style.setProperty('--color2', color_chenge)\r\n    }\r\n    function func3(color_chenge) {\r\n        const colorChenge3 = document.documentElement.style.getPropertyValue('--color3');\r\n        document.documentElement.style.setProperty('--color3', color_chenge)\r\n    }\r\n    // const colorChenge1 = document.documentElement.style.getPropertyValue('--color1');\r\n    // console.log(\"12121\", colorChenge1);\r\n    return (\r\n        <div className=\"configurator\">\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <center>\r\n                <div className=\"text_chenge\" >change the progress color: </div>\r\n                <br></br>\r\n                <div>task in process:<input type=\"color\" onChange={e => func1(e.target.value)}></input></div> ‏\r\n            <div>mission accomplished:<br></br> <input type=\"color\" onChange={e => func2(e.target.value)}></input></div>\r\n                <div>Task not started:<br></br><input type=\"color\" onChange={e => func3(e.target.value)}></input></div>\r\n            </center>\r\n        </div>\r\n    )\r\n\r\n}\r\n","\nimport React, { Component } from 'react';\nimport Gantt from './Components/Gantt/gantt';\nimport './App.css';\nimport Routing from './Components/routing/routing';\nimport { Router, Switch, Route } from 'react-router-dom'\nimport Header from './Components/Header/header'\nimport DisplayGantt from './Components/Gantt/DisplayGantt/displayGantt';\nimport Configurator from './Components/Configurator/Configurator';\n\n\nexport default function App() {\n\n  return (\n    <div>\n      <center>\n        <Configurator></Configurator>\n        <Routing></Routing>\n        <br></br>\n        <DisplayGantt></DisplayGantt>\n      </center>\n\n    </div>\n  );\n\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}